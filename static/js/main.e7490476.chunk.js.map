{"version":3,"sources":["assets/images/github-logo.svg","assets/images/octocat.svg","services/api.ts","util/GitHub/index.tsx","components/GitHubProfileItem/index.tsx","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","GitHub","get","then","response","data","resources","core","catch","error","username","page","following","followers","filter","otherArray","current","other","id","length","GitHubUserProfileItem","ghuser","Media","as","className","Image","width","height","src","avatar_url","alt","login","roundedCircle","Body","href","html_url","target","rel","type","Landing","defaultGitHubUser","name","octocatImg","useState","limit","remaining","reset","rateLimits","setRateLimits","isValidUser","setIsValidUser","setUsername","profile","setProfile","setFollowing","setFollowers","notFollowers","setNotFollowers","showToast","setShowToast","updateRateLimits","a","getRateLimits","e","preventDefault","getUser","statusCode","status","getFollowing","getFollowers","useEffect","gitUserNotFollowers","getNotFollowers","Container","fluid","Navbar","collapseOnSelect","expand","fixed","bg","variant","Brand","Toggle","aria-controls","Collapse","Text","Form","onSubmit","validated","noValidate","inline","FormControl","onChange","value","placeholder","autoFocus","required","Button","onClick","disabled","Row","Col","Toast","show","onClose","Header","logoImg","Card","Title","Subtitle","hidden","public_repos","Badge","pill","map","item","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7490476.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/octocat.a5790d6b.svg\";","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/'\r\n});\r\n\r\nexport default api;","import api from '../../services/api';\r\n\r\nexport interface IGitHubRateLimits {\r\n  limit: number;\r\n  remaining: number;\r\n  reset: number;\r\n}\r\n\r\nexport interface IGitHubUser {\r\n  id?: number;\r\n  login?: string;\r\n  name?: string;\r\n  type?: string;\r\n  avatar_url?: string;\r\n  html_url?: string;\r\n  following?: number;\r\n  followers?: number;\r\n  public_repos?: number;\r\n}\r\n\r\nexport default class GitHub {\r\n\r\n  static async getRateLimits() {\r\n\r\n    return await api.get('rate_limit')\r\n      .then( (response) => {\r\n        return response.data.resources.core as IGitHubRateLimits;\r\n      })\r\n      .catch( (error) => {\r\n        throw error;\r\n      });\r\n\r\n  }\r\n\r\n  static async getUser(username: string) {\r\n\r\n    return await api.get(`users/${ username }`)\r\n      .then( (response) => {\r\n        return response.data as IGitHubUser;\r\n      })\r\n      .catch( (error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async getFollowing(username: string, page: number) {\r\n    \r\n    return await api.get(`users/${ username }/following?per_page=100&page=${ page }`)\r\n      .then( (response) => {\r\n        return response.data as IGitHubUser[];\r\n      })\r\n      .catch( (error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async getFollowers(username: string, page: number) {\r\n    \r\n    return await api.get(`users/${ username }/followers?per_page=100&page=${ page }`)\r\n      .then( (response) => {\r\n        return response.data as IGitHubUser[];\r\n      })\r\n      .catch( (error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static getNotFollowers(following: IGitHubUser[], followers: IGitHubUser[]) {\r\n\r\n    function comparer(otherArray: IGitHubUser[]){\r\n      return function(current: IGitHubUser){\r\n        return otherArray.filter(function(other){\r\n          return other.id === current.id;\r\n        }).length === 0;\r\n      }\r\n    }\r\n    \r\n    return following.filter(comparer(followers)) as IGitHubUser[];\r\n  }\r\n\r\n} ","import React from 'react';\r\nimport { Media, Image } from 'react-bootstrap';\r\nimport { IGitHubUser } from '../../util/GitHub';\r\n\r\nimport './styles.css';\r\n\r\ninterface IGitHubProfileItemProps {\r\n  ghuser: IGitHubUser;\r\n}\r\n\r\nconst GitHubUserProfileItem: React.FunctionComponent<IGitHubProfileItemProps> = ({ ghuser }) => {\r\n\r\n  return (\r\n    <Media as=\"li\" className=\"media-profile-item\">\r\n      <Image\r\n        width={ 64 }\r\n        height={ 64 }\r\n        className=\"mr-3\"\r\n        src={ ghuser.avatar_url }\r\n        alt={ ghuser.login }\r\n        roundedCircle\r\n      />\r\n      <Media.Body>\r\n        <a href={ ghuser.html_url } className=\"media-profile-link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <h5>{ ghuser.login }</h5>\r\n          <p className=\"text-muted\">GitHub { ghuser.type }</p>\r\n        </a>\r\n      </Media.Body>\r\n    </Media>\r\n  );\r\n};\r\n\r\nexport default GitHubUserProfileItem;","import React, { useState, FormEvent, useEffect } from 'react';\r\nimport GitHub, { IGitHubUser, IGitHubRateLimits } from '../../util/GitHub';\r\nimport { Container, Navbar, Row, Col, Form, FormControl, Card, Image, Button, Badge, Toast } from 'react-bootstrap';\r\n\r\nimport GitHubUserProfileItem from '../../components/GitHubProfileItem';\r\n\r\nimport logoImg from '../../assets/images/github-logo.svg';\r\nimport octocatImg from '../../assets/images/octocat.svg'\r\n\r\nimport './styles.css';\r\n\r\nfunction Landing() {\r\n  \r\n  const defaultRateLimits = { limit: 0, remaining: 0, reset: 0 };\r\n  \r\n  const defaultGitHubUser: IGitHubUser = {\r\n    name: \"Follow Me (or Not)?\",\r\n    avatar_url: octocatImg\r\n  }\r\n  \r\n  const [ rateLimits, setRateLimits ] = useState<IGitHubRateLimits>(defaultRateLimits);\r\n  const [ isValidUser, setIsValidUser ] = useState(false);\r\n\r\n  const [ username, setUsername ] = useState('');\r\n  const [ profile, setProfile ] = useState<IGitHubUser>(defaultGitHubUser);\r\n  const [ following, setFollowing ] = useState<IGitHubUser[]>([]);\r\n  const [ followers, setFollowers ] = useState<IGitHubUser[]>([]);\r\n  const [ notFollowers, setNotFollowers ] = useState<IGitHubUser[]>([]);\r\n\r\n  const [showToast, setShowToast] = useState(false);\r\n  const toggleShowToast = () => setShowToast(!showToast);\r\n\r\n  function justPreventDefault(e: FormEvent) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  async function updateRateLimits() {\r\n    await GitHub.getRateLimits()\r\n      .then( (response) => {\r\n        setRateLimits(response);\r\n      });\r\n  }\r\n\r\n  async function handleIndexUser(e: FormEvent) {\r\n    e.preventDefault();\r\n    \r\n    await GitHub.getUser(username)\r\n      .then( (response) => {\r\n        setProfile(response);\r\n        setIsValidUser(true);\r\n      }).catch( (error) => {\r\n        let statusCode = error.response.status;\r\n        \r\n        if (statusCode === 403)\r\n          setShowToast(true);\r\n        \r\n        if (statusCode === 404)\r\n          setIsValidUser(false);\r\n        \r\n        setProfile(defaultGitHubUser);\r\n      });\r\n        \r\n    await GitHub.getFollowing(username, 1)\r\n      .then( (response) => {\r\n        setFollowing(response);\r\n      });\r\n    \r\n    await GitHub.getFollowers(username, 1)\r\n      .then( (response) => {\r\n        setFollowers(response);\r\n      });\r\n\r\n    updateRateLimits();\r\n  }\r\n\r\n  useEffect( () => {\r\n    updateRateLimits();\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    const gitUserNotFollowers = GitHub.getNotFollowers(following, followers);\r\n    setNotFollowers(gitUserNotFollowers);\r\n  }, [following, followers]);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Navbar collapseOnSelect className=\"navbar-virtual-width\" expand=\"md\" fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand className=\"nav-brand\" href=\"#home\">\r\n          GitHub - Follow Me (or Not)\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Navbar.Text className=\"ml-auto text-muted\">\r\n            <small>Remaining: { rateLimits.remaining }  of { rateLimits.limit }</small>\r\n          </Navbar.Text>\r\n          <Form\r\n            className=\"ml-auto\"\r\n            onSubmit={ justPreventDefault }\r\n            validated={ isValidUser }\r\n            noValidate\r\n            inline\r\n          >\r\n            <FormControl\r\n              type=\"text\"\r\n              className=\"mr-sm-2 user-form-input\"\r\n              onChange={ (e) => { setUsername(e.target.value) } }\r\n              placeholder=\"Enter a GitHub username.\"\r\n              autoFocus\r\n              required\r\n            />\r\n            <Button\r\n              className=\"user-form-button\"\r\n              variant=\"outline-info\"\r\n              onClick={ handleIndexUser }\r\n              disabled={ !username }\r\n            >Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Row className=\"content-wrapper\">\r\n        <Col>\r\n          <Toast show={ showToast } onClose={ toggleShowToast }>\r\n            <Toast.Header>\r\n              <img\r\n                src={ logoImg }\r\n                className=\"rounded mr-2 toast-image\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">GitHub</strong>\r\n              <small className=\"text-warning\">Warning!</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              You have reached the limit of { rateLimits.limit } requests per hour!&nbsp;\r\n              Try again later...\r\n            </Toast.Body>\r\n          </Toast>\r\n          <Card>\r\n            <span className=\"text-center\">\r\n              <Image className=\"user-profile-image\" src={ profile.avatar_url } alt={ profile.name } roundedCircle />\r\n            </span>\r\n            <Card.Body>\r\n              <div className=\"text-center\">\r\n                <Card.Title>{ profile.name }</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{ profile.login }</Card.Subtitle>\r\n              </div>\r\n              <Card.Text className=\"user-profile-details\" hidden={ !profile.id }>\r\n                <span>Following: { profile.following }</span>\r\n                <span>Followers: { profile.followers }</span>\r\n                <span>Public repos: { profile.public_repos }</span>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col hidden={ !profile.id }>\r\n          <Card>\r\n            <Card.Body>\r\n              <p>\r\n                Following:&nbsp;\r\n                <Badge pill variant=\"secondary\">{ profile.following }</Badge>{' '}\r\n              </p>\r\n              <ul className=\"list-unstyled list-scroll\">\r\n                { following.map( (item: IGitHubUser) => {\r\n                  return (\r\n                    <GitHubUserProfileItem key={ item.id } ghuser={ item } />\r\n                    );\r\n                  }) \r\n                }\r\n              </ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col hidden={ !profile.id }>\r\n          <Card>\r\n            <Card.Body>\r\n              <p>\r\n                Followers:&nbsp;\r\n                <Badge pill variant=\"secondary\">{ profile.followers }</Badge>{' '}\r\n              </p>\r\n              <ul className=\"list-unstyled list-scroll\">\r\n                { followers.map( (item: IGitHubUser) => {\r\n                  return (\r\n                    <GitHubUserProfileItem key={ item.id } ghuser={ item } />\r\n                    );\r\n                  }) \r\n                }\r\n              </ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col hidden={ !profile.id }>\r\n          <Card>\r\n            <Card.Body>\r\n              <p>\r\n                Not following back:&nbsp;\r\n                <Badge pill variant=\"secondary\">{ notFollowers.length }</Badge>{' '}\r\n              </p>\r\n              <ul className=\"list-unstyled list-scroll\">\r\n                { notFollowers.map( (item: IGitHubUser) => {\r\n                  return (\r\n                    <GitHubUserProfileItem key={ item.id } ghuser={ item } />\r\n                    );\r\n                  }) \r\n                }\r\n              </ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nimport Landing from './pages/Landing';\r\n\r\nimport './assets/styles/global.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Landing />      \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}