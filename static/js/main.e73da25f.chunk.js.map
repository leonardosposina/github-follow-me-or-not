{"version":3,"sources":["assets/images/github-logo.svg","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/index.tsx","components/GitHubUser/index.tsx","components/GitHubContacts/GitHubContactItem/index.tsx","components/GitHubContacts/index.tsx","utils/Utils.ts","services/api.ts","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["module","exports","ToastContainer","messages","removeToast","useToast","className","map","item","Toast","key","id","onClose","animation","autohide","delay","Header","src","logoImg","alt","style","title","Body","description","ToastContext","createContext","context","useContext","Error","ToastProvider","children","useState","setMessages","addToast","useCallback","toast","uuid","state","filter","message","Provider","value","AppProvider","GitHubUser","anchorId","profile","Col","Card","Image","avatar_url","name","roundedCircle","Title","Subtitle","login","Text","followers","following","public_repos","GitHubContactItem","contact","Media","as","width","height","href","html_url","target","rel","type","GitHubContacts","contacts","length","Badge","pill","variant","Spinner","calculateMinutesLeft","epoch","convertedDate","Date","now","Math","ceil","getTime","api","axios","create","baseURL","Landing","isValidUser","setIsValidUser","rateLimits","setRateLimits","username","setUsername","setProfile","setFollowing","setFollowers","notFollowers","setNotFollowers","handleSearch","e","preventDefault","Promise","all","get","then","responses","data","catch","errors","status","response","limit","reset","updateRateLimits","rate","useEffect","otherArray","current","other","findNotFollowers","Container","fluid","Navbar","collapseOnSelect","expand","fixed","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","remaining","Form","onSubmit","validated","noValidate","inline","FormControl","onChange","placeholder","autoFocus","required","Button","disabled","Row","md","lg","xl","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73da25f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import React from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nimport logoImg from '../../assets/images/github-logo.svg';\r\nimport { IToastMessage, useToast } from '../../hooks/toast';\r\n\r\nimport './styles.css';\r\n\r\ninterface IToastContainerProps {\r\n  messages: IToastMessage[];\r\n}\r\n\r\nconst ToastContainer: React.FC<IToastContainerProps> = ({ messages }) => {\r\n  const { removeToast } = useToast();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {messages.map(item => (\r\n        <Toast\r\n          key={item.id}\r\n          onClose={() => removeToast(item.id)}\r\n          animation\r\n          autohide\r\n          delay={3000}\r\n        >\r\n          <Toast.Header>\r\n            <img src={logoImg} className=\"rounded mr-2\" alt=\"GitHub Logo\" />\r\n            <strong className=\"mr-auto\">GitHub</strong>\r\n            <small className={item.style}>\r\n              <strong>{item.title}</strong>\r\n            </small>\r\n          </Toast.Header>\r\n          <Toast.Body>{item.description}</Toast.Body>\r\n        </Toast>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastContainer;\r\n","import React, { createContext, useContext, useCallback, useState } from 'react';\r\nimport { uuid } from 'uuidv4';\r\n\r\nimport ToastContainer from '../components/ToastContainer';\r\n\r\nexport interface IToastMessage {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  style: 'text-info' | 'text-success' | 'text-warning' | 'text-danger';\r\n}\r\n\r\ninterface IToastContextData {\r\n  addToast(message: Omit<IToastMessage, 'id'>): void;\r\n  removeToast(id: string): void;\r\n}\r\n\r\nconst ToastContext = createContext<IToastContextData>({} as IToastContextData);\r\n\r\nfunction useToast(): IToastContextData {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (!context) throw new Error('useToast must be used within a ToastProvider');\r\n\r\n  return context;\r\n}\r\n\r\nconst ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<IToastMessage[]>([]);\r\n\r\n  const addToast = useCallback(\r\n    ({ title, description, style }: Omit<IToastMessage, 'id'>) => {\r\n      const id = uuid();\r\n      const toast = {\r\n        id,\r\n        title,\r\n        description,\r\n        style,\r\n      };\r\n\r\n      setMessages([...messages, toast]);\r\n    },\r\n    [messages],\r\n  );\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setMessages(state => state.filter(message => message.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport { useToast, ToastProvider };\r\n","import React from 'react';\r\n\r\nimport { ToastProvider } from './toast';\r\n\r\nconst AppProvider: React.FC = ({ children }) => (\r\n  <ToastProvider>{children}</ToastProvider>\r\n);\r\n\r\nexport default AppProvider;\r\n","/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport { Card, Col, Image } from 'react-bootstrap';\r\n\r\nimport IGitHubProfileDTO from '../../dtos/IGitHubProfileDTO';\r\n\r\nimport './styles.css';\r\n\r\ninterface IGitHubUserProps {\r\n  anchorId: string;\r\n  profile: IGitHubProfileDTO;\r\n}\r\n\r\nconst GitHubUser: React.FC<IGitHubUserProps> = ({ anchorId, profile }) => {\r\n  return (\r\n    <Col id={anchorId}>\r\n      <Card>\r\n        <span className=\"text-center\">\r\n          <Image\r\n            className=\"user-profile-image\"\r\n            src={profile.avatar_url}\r\n            alt={profile.name}\r\n            roundedCircle\r\n          />\r\n        </span>\r\n        <Card.Body>\r\n          <div className=\"text-center\">\r\n            <Card.Title>{profile.name}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {profile.login}\r\n            </Card.Subtitle>\r\n          </div>\r\n          <Card.Text className=\"user-profile-details\">\r\n            <span>\r\n              Followers:&nbsp;\r\n              <strong>{profile.followers}</strong>\r\n            </span>\r\n            <span>\r\n              Following:&nbsp;\r\n              <strong>{profile.following}</strong>\r\n            </span>\r\n            <span>\r\n              Public repos:&nbsp;\r\n              <strong>{profile.public_repos}</strong>\r\n            </span>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GitHubUser;\r\n","import React from 'react';\r\nimport { Media, Image } from 'react-bootstrap';\r\n\r\nimport IGitHubContactDTO from '../../../dtos/IGitHubContactDTO';\r\n\r\nimport './styles.css';\r\n\r\ninterface IGitHubProfileItemProps {\r\n  contact: IGitHubContactDTO;\r\n}\r\n\r\nconst GitHubContactItem: React.FunctionComponent<IGitHubProfileItemProps> = ({\r\n  contact,\r\n}) => {\r\n  return (\r\n    <Media as=\"li\" className=\"media-profile-item\">\r\n      <Image\r\n        width={64}\r\n        height={64}\r\n        className=\"mr-3\"\r\n        src={contact.avatar_url}\r\n        alt={contact.login}\r\n        roundedCircle\r\n      />\r\n      <Media.Body>\r\n        <a\r\n          href={contact.html_url}\r\n          className=\"media-profile-link\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <h5>{contact.login}</h5>\r\n          <p className=\"text-muted\">\r\n            GitHub\r\n            {contact.type}\r\n          </p>\r\n        </a>\r\n      </Media.Body>\r\n    </Media>\r\n  );\r\n};\r\n\r\nexport default GitHubContactItem;\r\n","import React from 'react';\nimport { Col, Card, Badge, Spinner } from 'react-bootstrap';\n\nimport IGitHubContactDTO from '../../dtos/IGitHubContactDTO';\n\nimport GitHubContactItem from './GitHubContactItem';\n\nimport './styles.css';\n\ninterface IGitHubContactsProps {\n  title: string;\n  anchorId: string;\n  contacts: IGitHubContactDTO[];\n}\n\nconst GitHubContacts: React.FC<IGitHubContactsProps> = ({\n  title,\n  anchorId,\n  contacts,\n}) => {\n  return (\n    <>\n      {contacts.length !== 0 && (\n        <Col id={anchorId}>\n          <Card>\n            <Card.Body>\n              <p className=\"title\">\n                {`${title}: `}\n                <Badge pill variant=\"secondary\">\n                  {contacts.length}\n                </Badge>\n              </p>\n              {!contacts && (\n                <p className=\"text-center\">\n                  <Spinner animation=\"border\" />\n                </p>\n              )}\n              <ul className=\"list-unstyled list-scroll\">\n                {contacts.map(item => (\n                  <GitHubContactItem key={item.id} contact={item} />\n                ))}\n              </ul>\n            </Card.Body>\n          </Card>\n        </Col>\n      )}\n    </>\n  );\n};\n\nexport default GitHubContacts;\n","import IGitHubContactDTO from '../dtos/IGitHubContactDTO';\r\n\r\n/// Helper function to find who is not following back.\r\nconst comparer = (otherArray: IGitHubContactDTO[]) => {\r\n  return (current: IGitHubContactDTO) => {\r\n    return otherArray.filter(other => other.id === current.id).length === 0;\r\n  };\r\n};\r\n\r\nexport const findNotFollowers = (\r\n  following: IGitHubContactDTO[],\r\n  followers: IGitHubContactDTO[],\r\n): IGitHubContactDTO[] => following.filter(comparer(followers));\r\n\r\nexport const calculateMinutesLeft = (epoch: number): number => {\r\n  const convertedDate = new Date(epoch * 1000);\r\n  const now = new Date();\r\n  return Math.ceil((convertedDate.getTime() - now.getTime()) / 60000);\r\n};\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/',\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, FormEvent, useEffect, useCallback } from 'react';\nimport {\n  Container,\n  Navbar,\n  Nav,\n  Row,\n  Form,\n  FormControl,\n  Button,\n} from 'react-bootstrap';\n\nimport GitHubUser from '../../components/GitHubUser';\nimport GitHubContacts from '../../components/GitHubContacts';\n\nimport IGitHubProfileDTO from '../../dtos/IGitHubProfileDTO';\nimport IGitHubContactDTO from '../../dtos/IGitHubContactDTO';\nimport IGitHubRateLimitsDTO from '../../dtos/IGitHubRateLimitsDTO';\n\nimport { findNotFollowers, calculateMinutesLeft } from '../../utils/Utils';\nimport { useToast } from '../../hooks/toast';\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nconst Landing: React.FC = () => {\n  const [isValidUser, setIsValidUser] = useState<boolean>(false);\n  const [rateLimits, setRateLimits] = useState<IGitHubRateLimitsDTO>(\n    {} as IGitHubRateLimitsDTO,\n  );\n  const [username, setUsername] = useState('');\n  const [profile, setProfile] = useState<IGitHubProfileDTO | null>();\n  const [following, setFollowing] = useState<IGitHubContactDTO[]>([]);\n  const [followers, setFollowers] = useState<IGitHubContactDTO[]>([]);\n  const [notFollowers, setNotFollowers] = useState<IGitHubContactDTO[]>([]);\n\n  const { addToast } = useToast();\n\n  const handleSearch = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n\n      Promise.all([\n        api.get(`users/${username}`),\n        api.get(`users/${username}/following?per_page=100&page=1`),\n        api.get(`users/${username}/followers?per_page=100&page=1`),\n      ])\n        .then(responses => {\n          setProfile(responses[0].data);\n          setFollowing(responses[1].data);\n          setFollowers(responses[2].data);\n          setIsValidUser(true);\n        })\n        .catch(errors => {\n          setProfile(null);\n          setFollowing([]);\n          setFollowers([]);\n          setIsValidUser(false);\n\n          const { status } = errors.response;\n\n          if (status === 403)\n            addToast({\n              title: 'Requests limit exceeded!',\n              description: `You have reached the limit of ${\n                rateLimits?.limit\n              } requests per hour! Try again in ${calculateMinutesLeft(\n                rateLimits.reset,\n              )} minutes.`,\n              style: 'text-warning',\n            });\n\n          if (status === 404)\n            addToast({\n              title: 'User not found!',\n              description: `User \"${username}\" not found on GitHub!`,\n              style: 'text-warning',\n            });\n        });\n    },\n    [addToast, rateLimits, username],\n  );\n\n  const updateRateLimits = useCallback(() => {\n    api.get('rate_limit').then(response => setRateLimits(response.data.rate));\n  }, []);\n\n  useEffect(() => {\n    updateRateLimits();\n  }, [profile, following, followers, updateRateLimits]);\n\n  useEffect(() => {\n    const response = findNotFollowers(following, followers);\n    setNotFollowers(response);\n  }, [following, followers]);\n\n  return (\n    <Container fluid>\n      <Navbar\n        collapseOnSelect\n        className=\"navbar-virtual-width\"\n        expand=\"xl\"\n        fixed=\"top\"\n        bg=\"dark\"\n        variant=\"dark\"\n      >\n        <Navbar.Brand className=\"nav-brand\" href=\"#profile\">\n          GitHub - Follow Me (or Not)\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          {profile && (\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#followers\">Followers</Nav.Link>\n              <Nav.Link href=\"#following\">Following</Nav.Link>\n              <Nav.Link href=\"#not-following-back\">Not following back</Nav.Link>\n            </Nav>\n          )}\n          <Navbar.Text className=\"ml-auto text-muted\">\n            {rateLimits && (\n              <small>{`Remaining ${rateLimits.remaining} of ${rateLimits.limit}`}</small>\n            )}\n          </Navbar.Text>\n          <Form\n            className=\"ml-auto\"\n            onSubmit={handleSearch}\n            validated={isValidUser}\n            noValidate\n            inline\n          >\n            <FormControl\n              type=\"text\"\n              className=\"mr-sm-2 user-form-input\"\n              onChange={e => {\n                setUsername(e.target.value);\n              }}\n              onSubmit={handleSearch}\n              placeholder=\"Enter a GitHub username.\"\n              autoFocus\n              required\n            />\n            <Button\n              type=\"submit\"\n              className=\"user-form-button\"\n              variant=\"outline-info\"\n              disabled={!username}\n            >\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <Row className=\"content-wrapper\" md={2} lg={3} xl={4}>\n        {profile && (\n          <>\n            <GitHubUser anchorId=\"profile\" profile={profile} />\n            <GitHubContacts\n              title=\"Followers\"\n              anchorId=\"followers\"\n              contacts={followers}\n            />\n            <GitHubContacts\n              title=\"Following\"\n              anchorId=\"following\"\n              contacts={following}\n            />\n            <GitHubContacts\n              title=\"Not following back\"\n              anchorId=\"not-following-back\"\n              contacts={notFollowers}\n            />\n          </>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\r\n\r\nimport AppProvider from './hooks';\r\nimport Landing from './pages/Landing';\r\n\r\nimport './assets/styles/global.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App: React.FC = () => (\r\n  <AppProvider>\r\n    <Landing />\r\n  </AppProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}