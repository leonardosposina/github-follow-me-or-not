{"version":3,"sources":["assets/images/octocat.svg","assets/images/github-logo.svg","services/api.ts","util/GitHub/index.tsx","components/GitHubProfileItem/index.tsx","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","defaultGitHubUser","name","avatar_url","octocatImg","GitHub","username","user","get","then","response","data","isValidUser","catch","error","console","responseStatus","status","followingList","followerList","following","followers","filter","otherArray","current","other","id","length","GitHubUserProfileItem","ghuser","Media","as","className","Image","width","height","src","alt","login","roundedCircle","Body","href","html_url","target","rel","type","Landing","useState","setUsername","profile","setProfile","setFollowing","setFollowers","notFollowers","setNotFollowers","showToast","setShowToast","e","a","preventDefault","getUser","gitUser","getFollowing","gitUserFollowing","getFollowers","gitUserFollowers","useEffect","gitUserNotFollowers","getNotFollowers","Container","fluid","Navbar","collapseOnSelect","expand","fixed","bg","variant","Brand","Toggle","aria-controls","Collapse","Form","onSubmit","validated","noValidate","inline","FormControl","onChange","value","placeholder","autoFocus","required","Button","onClick","disabled","Row","Col","Toast","show","onClose","Header","logoImg","Card","Title","Subtitle","Text","hidden","public_repos","Badge","pill","map","item","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8defacf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/octocat.a5790d6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/users'\r\n});\r\n\r\nexport default api;","import api from '../../services/api';\r\n\r\nimport octocatImg from '../../assets/images/octocat.svg'\r\n\r\nexport interface IGitHubUser {\r\n  id?: number;\r\n  login?: string;\r\n  name?: string;\r\n  type?: string;\r\n  avatar_url?: string;\r\n  html_url?: string;\r\n  following?: number;\r\n  followers?: number;\r\n  public_repos?: number;\r\n}\r\n\r\nexport const defaultGitHubUser: IGitHubUser = {\r\n  name: \"Follow Me (or Not)?\",\r\n  avatar_url: octocatImg\r\n}\r\n\r\n\r\nexport default class GitHub {\r\n  \r\n  static isValidUser: boolean = false;\r\n  static responseStatus: number;\r\n\r\n  static async getUser(username: string) {\r\n    let user: IGitHubUser = defaultGitHubUser;\r\n    \r\n    await api.get(username)\r\n      .then( (response) => {\r\n        user = response.data;\r\n        this.isValidUser = true;\r\n      })\r\n      .catch( (error) => {\r\n        console.error(error);\r\n        this.responseStatus = error.response.status;\r\n        this.isValidUser = false;\r\n      });\r\n\r\n    return user;\r\n  }\r\n\r\n  static async getFollowing(username: string) {\r\n    let followingList: IGitHubUser[] = [];\r\n    let page = 1; \r\n    \r\n    await api.get(username + \"/following?per_page=100&page=\" + page)\r\n      .then( (response) => {\r\n        followingList = response.data;\r\n      })\r\n      .catch( (error) => {\r\n        console.error(error);\r\n      });\r\n\r\n    return followingList;\r\n  }\r\n\r\n  static async getFollowers(username: string) {\r\n    let followerList: IGitHubUser[] = [];\r\n    let page = 1;\r\n    \r\n    await api.get(username + \"/followers?per_page=100&page=\" + page)\r\n      .then( (response) => {\r\n        followerList = response.data;\r\n      })\r\n      .catch( (error) => {\r\n        console.error(error);\r\n      });\r\n\r\n    return followerList;\r\n  }\r\n\r\n  static getNotFollowers(following: IGitHubUser[], followers: IGitHubUser[]) {\r\n\r\n    function comparer(otherArray: IGitHubUser[]){\r\n      return function(current: IGitHubUser){\r\n        return otherArray.filter(function(other){\r\n          return other.id === current.id;\r\n        }).length === 0;\r\n      }\r\n    }\r\n    \r\n    return following.filter(comparer(followers));\r\n  }\r\n\r\n} ","import React from 'react';\r\nimport { Media, Image } from 'react-bootstrap';\r\nimport { IGitHubUser } from '../../util/GitHub';\r\n\r\nimport './styles.css';\r\n\r\ninterface IGitHubProfileItemProps {\r\n  ghuser: IGitHubUser;\r\n}\r\n\r\nconst GitHubUserProfileItem: React.FunctionComponent<IGitHubProfileItemProps> = ({ ghuser }) => {\r\n\r\n  return (\r\n    <Media as=\"li\" className=\"media-profile-item\">\r\n      <Image\r\n        width={ 64 }\r\n        height={ 64 }\r\n        className=\"mr-3\"\r\n        src={ ghuser.avatar_url }\r\n        alt={ ghuser.login }\r\n        roundedCircle\r\n      />\r\n      <Media.Body>\r\n        <a href={ ghuser.html_url } className=\"media-profile-link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <h5>{ ghuser.login }</h5>\r\n          <p className=\"text-muted\">GitHub { ghuser.type }</p>\r\n        </a>\r\n      </Media.Body>\r\n    </Media>\r\n  );\r\n};\r\n\r\nexport default GitHubUserProfileItem;","import React, { useState, FormEvent, useEffect } from 'react';\r\nimport GitHub, { IGitHubUser, defaultGitHubUser } from '../../util/GitHub';\r\nimport { Container, Navbar, Row, Col, Form, FormControl, Card, Image, Button, Badge, Toast } from 'react-bootstrap';\r\n\r\nimport GitHubUserProfileItem from '../../components/GitHubProfileItem';\r\n\r\nimport logoImg from '../../assets/images/github-logo.svg';\r\n\r\nimport './styles.css';\r\n\r\nfunction Landing() {\r\n\r\n  const [ username, setUsername ] = useState('');\r\n  const [ profile, setProfile ] = useState<IGitHubUser>(defaultGitHubUser);\r\n  const [ following, setFollowing ] = useState<IGitHubUser[]>([]);\r\n  const [ followers, setFollowers ] = useState<IGitHubUser[]>([]);\r\n  const [ notFollowers, setNotFollowers ] = useState<IGitHubUser[]>([]);\r\n\r\n  const [showToast, setShowToast] = useState(false);\r\n  const toggleShowToast = () => setShowToast(!showToast);\r\n\r\n  function justPreventDefault(e: FormEvent) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  async function handleIndexUser(e: FormEvent) {\r\n    e.preventDefault();\r\n    \r\n    const gitUser = await GitHub.getUser(username);\r\n    setProfile(gitUser);\r\n    \r\n    const gitUserFollowing = await GitHub.getFollowing(username);\r\n    setFollowing(gitUserFollowing);\r\n    \r\n    const gitUserFollowers = await GitHub.getFollowers(username);\r\n    setFollowers(gitUserFollowers);\r\n\r\n    if (GitHub.responseStatus === 403) {\r\n      setShowToast(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const gitUserNotFollowers = GitHub.getNotFollowers(following, followers);\r\n    setNotFollowers(gitUserNotFollowers);\r\n  },[following, followers]);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Navbar collapseOnSelect className=\"navbar-virtual-width\" expand=\"md\" fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand className=\"nav-brand\" href=\"#home\">\r\n          GitHub - Follow Me (or Not)\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Form\r\n            className=\"ml-auto\"\r\n            onSubmit={ justPreventDefault }\r\n            validated={ GitHub.isValidUser }\r\n            noValidate\r\n            inline\r\n          >\r\n            <FormControl\r\n              type=\"text\"\r\n              className=\"mr-sm-2 user-form-input\"\r\n              onChange={ (e) => { setUsername(e.target.value) } }\r\n              placeholder=\"Enter a GitHub username.\"\r\n              autoFocus\r\n              required\r\n            />\r\n            <Button\r\n              className=\"user-form-button\"\r\n              variant=\"outline-info\"\r\n              onClick={ handleIndexUser }\r\n              disabled={ !username }\r\n            >Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Row className=\"content-wrapper\">\r\n        <Col>\r\n          <Toast show={ showToast } onClose={ toggleShowToast }>\r\n            <Toast.Header>\r\n              <img\r\n                src={ logoImg }\r\n                className=\"rounded mr-2 toast-image\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">GitHub</strong>\r\n              <small className=\"text-warning\">Warning!</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              You have reached the limit of 60 requests per hour!&nbsp;\r\n              Try again later...\r\n            </Toast.Body>\r\n          </Toast>\r\n          <Card>\r\n            <span className=\"text-center\">\r\n              <Image className=\"user-profile-image\" src={ profile.avatar_url } alt={ profile.name } roundedCircle />\r\n            </span>\r\n            <Card.Body>\r\n              <div className=\"text-center\">\r\n                <Card.Title>{ profile.name }</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{ profile.login }</Card.Subtitle>\r\n              </div>\r\n              <Card.Text className=\"user-profile-details\" hidden={ !profile.id }>\r\n                <span>Following: { profile.following }</span>\r\n                <span>Followers: { profile.followers }</span>\r\n                <span>Public repos: { profile.public_repos }</span>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col hidden={ !profile.id }>\r\n          <Card>\r\n            <Card.Body>\r\n              <p>\r\n                Following:&nbsp;\r\n                <Badge pill variant=\"secondary\">{ profile.following }</Badge>{' '}\r\n              </p>\r\n              <ul className=\"list-unstyled list-scroll\">\r\n                { following.map( (item: IGitHubUser) => {\r\n                  return (\r\n                    <GitHubUserProfileItem key={ item.id } ghuser={ item } />\r\n                    );\r\n                  }) \r\n                }\r\n              </ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col hidden={ !profile.id }>\r\n          <Card>\r\n            <Card.Body>\r\n              <p>\r\n                Followers:&nbsp;\r\n                <Badge pill variant=\"secondary\">{ profile.followers }</Badge>{' '}\r\n              </p>\r\n              <ul className=\"list-unstyled list-scroll\">\r\n                { followers.map( (item: IGitHubUser) => {\r\n                  return (\r\n                    <GitHubUserProfileItem key={ item.id } ghuser={ item } />\r\n                    );\r\n                  }) \r\n                }\r\n              </ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col hidden={ !profile.id }>\r\n          <Card>\r\n            <Card.Body>\r\n              <p>\r\n                Not following back:&nbsp;\r\n                <Badge pill variant=\"secondary\">{ notFollowers.length }</Badge>{' '}\r\n              </p>\r\n              <ul className=\"list-unstyled list-scroll\">\r\n                { notFollowers.map( (item: IGitHubUser) => {\r\n                  return (\r\n                    <GitHubUserProfileItem key={ item.id } ghuser={ item } />\r\n                    );\r\n                  }) \r\n                }\r\n              </ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nimport Landing from './pages/Landing';\r\n\r\nimport './assets/styles/global.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Landing />      \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}