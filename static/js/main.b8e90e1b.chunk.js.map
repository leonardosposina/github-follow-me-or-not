{"version":3,"sources":["assets/images/github-logo.svg","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/index.tsx","components/GitHubUser/index.tsx","components/GitHubContacts/GitHubContactItem/index.tsx","components/GitHubContacts/index.tsx","utils/Utils.ts","services/api.ts","repositories/GitHubRepository.ts","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["module","exports","ToastContainer","messages","removeToast","useToast","messageWithTransitions","useTransition","message","id","from","right","opacity","enter","leave","className","map","key","item","props","Toast","onClose","style","Header","src","logoImg","alt","title","Body","description","ToastContext","createContext","context","useContext","Error","ToastProvider","children","useState","setMessages","addToast","useCallback","toast","uuid","state","filter","Provider","value","AppProvider","GitHubUser","anchorId","profile","Col","Card","Image","avatar_url","name","roundedCircle","Title","Subtitle","login","Text","following","followers","public_repos","GitHubContactItem","contact","Media","as","width","height","href","html_url","target","rel","type","GitHubContacts","contacts","Badge","pill","variant","length","Spinner","animation","Utils","calculateMinutesLeft","epoch","convertedDate","Date","now","Math","ceil","getTime","api","axios","create","baseURL","GitHubRepository","getProfile","username","a","get","then","response","data","catch","error","getContacts","resource","page","getNotFollowers","otherArray","current","other","getRateLimits","resources","core","Landing","githubRepository","limit","remaining","reset","rateLimits","setRateLimits","setUsername","isValidUser","setIsValidUser","setProfile","setFollowing","setFollowers","notFollowers","setNotFollowers","util","Util","updateRateLimits","limits","handleIndexUser","e","preventDefault","statusCode","status","useEffect","Container","fluid","Navbar","collapseOnSelect","expand","fixed","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","Form","onSubmit","validated","noValidate","inline","FormControl","onChange","placeholder","autoFocus","required","Button","disabled","Row","md","lg","xl","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8e90e1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import React from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\nimport { useTransition } from 'react-spring';\r\n\r\nimport logoImg from '../../assets/images/github-logo.svg';\r\nimport { IToastMessage, useToast } from '../../hooks/toast';\r\n\r\nimport './styles.css';\r\n\r\ninterface IToastContainerProps {\r\n  messages: IToastMessage[];\r\n}\r\n\r\nconst ToastContainer: React.FC<IToastContainerProps> = ({ messages }) => {\r\n  const { removeToast } = useToast();\r\n\r\n  const messageWithTransitions = useTransition(\r\n    messages,\r\n    message => message.id,\r\n    {\r\n      from: { right: '-120%', opacity: 0 },\r\n      enter: { right: '0%', opacity: 1 },\r\n      leave: { right: '-120%', opacity: 0 },\r\n    },\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {messageWithTransitions.map(({ key, item, props }) => (\r\n        <Toast key={key} onClose={() => removeToast(item.id)} style={props}>\r\n          <Toast.Header>\r\n            <img src={logoImg} className=\"rounded mr-2\" alt=\"GitHub Logo\" />\r\n            <strong className=\"mr-auto\">GitHub</strong>\r\n            <small className={item.style}>\r\n              <strong>{item.title}</strong>\r\n            </small>\r\n          </Toast.Header>\r\n          <Toast.Body>{item.description}</Toast.Body>\r\n        </Toast>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastContainer;\r\n","import React, { createContext, useContext, useCallback, useState } from 'react';\r\nimport { uuid } from 'uuidv4';\r\n\r\nimport ToastContainer from '../components/ToastContainer';\r\n\r\nexport interface IToastMessage {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  style: 'text-info' | 'text-success' | 'text-warning' | 'text-danger';\r\n}\r\n\r\ninterface IToastContextData {\r\n  addToast(message: Omit<IToastMessage, 'id'>): void;\r\n  removeToast(id: string): void;\r\n}\r\n\r\nconst ToastContext = createContext<IToastContextData>({} as IToastContextData);\r\n\r\nfunction useToast(): IToastContextData {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (!context) throw new Error('useToast must be used within a ToastProvider');\r\n\r\n  return context;\r\n}\r\n\r\nconst ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<IToastMessage[]>([]);\r\n\r\n  const addToast = useCallback(\r\n    ({ title, description, style }: Omit<IToastMessage, 'id'>) => {\r\n      const id = uuid();\r\n      const toast = {\r\n        id,\r\n        title,\r\n        description,\r\n        style,\r\n      };\r\n\r\n      setMessages([...messages, toast]);\r\n    },\r\n    [messages],\r\n  );\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setMessages(state => state.filter(message => message.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport { useToast, ToastProvider };\r\n","import React from 'react';\r\n\r\nimport { ToastProvider } from './toast';\r\n\r\nconst AppProvider: React.FC = ({ children }) => (\r\n  <ToastProvider>{children}</ToastProvider>\r\n);\r\n\r\nexport default AppProvider;\r\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { Card, Col, Image } from 'react-bootstrap';\n\nimport { IGitHubProfileDTO } from '../../repositories/GitHubRepository';\n\nimport './styles.css';\n\ninterface IGitHubUserProps {\n  anchorId: string;\n  profile: IGitHubProfileDTO;\n}\n\nconst GitHubUser: React.FC<IGitHubUserProps> = ({ anchorId, profile }) => {\n  return (\n    <Col id={anchorId}>\n      <Card>\n        <span className=\"text-center\">\n          <Image\n            className=\"user-profile-image\"\n            src={profile.avatar_url}\n            alt={profile.name}\n            roundedCircle\n          />\n        </span>\n        <Card.Body>\n          <div className=\"text-center\">\n            <Card.Title>{profile.name}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {profile.login}\n            </Card.Subtitle>\n          </div>\n          <Card.Text className=\"user-profile-details\">\n            <span>\n              Following:&nbsp;\n              <strong>{profile.following}</strong>\n            </span>\n            <span>\n              Followers:&nbsp;\n              <strong>{profile.followers}</strong>\n            </span>\n            <span>\n              Public repos:&nbsp;\n              <strong>{profile.public_repos}</strong>\n            </span>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nexport default GitHubUser;\n","import React from 'react';\nimport { Media, Image } from 'react-bootstrap';\nimport { IGitHubContactDTO } from '../../../repositories/GitHubRepository';\n\nimport './styles.css';\n\ninterface IGitHubProfileItemProps {\n  contact: IGitHubContactDTO;\n}\n\nconst GitHubContactItem: React.FunctionComponent<IGitHubProfileItemProps> = ({\n  contact,\n}) => {\n  return (\n    <Media as=\"li\" className=\"media-profile-item\">\n      <Image\n        width={64}\n        height={64}\n        className=\"mr-3\"\n        src={contact.avatar_url}\n        alt={contact.login}\n        roundedCircle\n      />\n      <Media.Body>\n        <a\n          href={contact.html_url}\n          className=\"media-profile-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <h5>{contact.login}</h5>\n          <p className=\"text-muted\">\n            GitHub\n            {contact.type}\n          </p>\n        </a>\n      </Media.Body>\n    </Media>\n  );\n};\n\nexport default GitHubContactItem;\n","import React from 'react';\nimport { Col, Card, Badge, Spinner } from 'react-bootstrap';\n\nimport GitHubContactItem from './GitHubContactItem';\n\nimport { IGitHubContactDTO } from '../../repositories/GitHubRepository';\n\nimport './styles.css';\n\ninterface IGitHubContactsProps {\n  title: string;\n  anchorId: string;\n  contacts: IGitHubContactDTO[];\n}\n\nconst GitHubContacts: React.FC<IGitHubContactsProps> = ({\n  title,\n  anchorId,\n  contacts,\n}) => {\n  return (\n    <Col id={anchorId}>\n      <Card>\n        <Card.Body>\n          <p className=\"title\">\n            {`${title}: `}\n            <Badge pill variant=\"secondary\">\n              {contacts.length}\n            </Badge>\n          </p>\n          {!contacts && (\n            <p className=\"text-center\">\n              <Spinner animation=\"border\" />\n            </p>\n          )}\n          <ul className=\"list-unstyled list-scroll\">\n            {contacts.map(item => (\n              <GitHubContactItem key={item.id} contact={item} />\n            ))}\n          </ul>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nexport default GitHubContacts;\n","class Utils {\n  public calculateMinutesLeft = (epoch: number): number => {\n    const convertedDate = new Date(epoch * 1000);\n    const now = new Date();\n    return Math.ceil((convertedDate.getTime() - now.getTime()) / 60000);\n  };\n}\n\nexport default Utils;\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/',\r\n});\r\n\r\nexport default api;\r\n","/* eslint-disable camelcase */\nimport api from '../services/api';\n\nexport interface IGitHubRateLimitsDTO {\n  limit: number;\n  remaining: number;\n  reset: number;\n}\n\nexport interface IGitHubProfileDTO {\n  id: number;\n  login: string;\n  name: string;\n  type: string;\n  avatar_url: string;\n  html_url: string;\n  following: number;\n  followers: number;\n  public_repos: number;\n}\n\nexport interface IGitHubContactDTO {\n  id: number;\n  login: string;\n  type: string;\n  avatar_url: string;\n  html_url: string;\n}\n\nclass GitHubRepository {\n  public getProfile = async (username: string): Promise<IGitHubProfileDTO> => {\n    return api\n      .get(`users/${username}`)\n      .then(response => response.data)\n      .catch(error => {\n        throw error;\n      });\n  };\n\n  public getContacts = async (\n    username: string,\n    resource: 'following' | 'followers',\n    page: number,\n  ): Promise<IGitHubContactDTO[]> =>\n    api\n      .get(`users/${username}/${resource}?per_page=100&page=${page}`)\n      .then(response => response.data);\n\n  public getNotFollowers = (\n    following: IGitHubContactDTO[],\n    followers: IGitHubContactDTO[],\n  ): IGitHubContactDTO[] => {\n    function comparer(otherArray: IGitHubContactDTO[]) {\n      return (current: IGitHubContactDTO) => {\n        return otherArray.filter(other => other.id === current.id).length === 0;\n      };\n    }\n    return following.filter(comparer(followers));\n  };\n\n  public getRateLimits = async (): Promise<IGitHubRateLimitsDTO> =>\n    api.get('rate_limit').then(response => response.data.resources.core);\n}\n\nexport default GitHubRepository;\n","import React, { useState, FormEvent, useEffect, useCallback } from 'react';\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  Nav,\r\n  Row,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from 'react-bootstrap';\r\n\r\nimport GitHubUser from '../../components/GitHubUser';\r\nimport GitHubContacts from '../../components/GitHubContacts';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\nimport Util from '../../utils/Utils';\r\n\r\nimport GitHubRepository, {\r\n  IGitHubProfileDTO,\r\n  IGitHubContactDTO,\r\n  IGitHubRateLimitsDTO,\r\n} from '../../repositories/GitHubRepository';\r\n\r\nimport './styles.css';\r\n\r\nconst Landing: React.FC = () => {\r\n  const githubRepository = new GitHubRepository();\r\n\r\n  const [rateLimits, setRateLimits] = useState<IGitHubRateLimitsDTO>({\r\n    limit: 0,\r\n    remaining: 0,\r\n    reset: 0,\r\n  });\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [isValidUser, setIsValidUser] = useState<boolean>();\r\n  const [profile, setProfile] = useState<IGitHubProfileDTO | null>();\r\n  const [following, setFollowing] = useState<IGitHubContactDTO[]>([]);\r\n  const [followers, setFollowers] = useState<IGitHubContactDTO[]>([]);\r\n  const [notFollowers, setNotFollowers] = useState<IGitHubContactDTO[]>([]);\r\n\r\n  const { addToast } = useToast();\r\n  const util = new Util();\r\n\r\n  const updateRateLimits = useCallback(async () => {\r\n    const limits = await githubRepository.getRateLimits();\r\n    setRateLimits(limits);\r\n  }, [githubRepository]);\r\n\r\n  const handleIndexUser = useCallback(\r\n    async (e: FormEvent) => {\r\n      e.preventDefault();\r\n\r\n      githubRepository\r\n        .getProfile(username)\r\n        .then(response => {\r\n          setProfile(response);\r\n          setIsValidUser(true);\r\n        })\r\n        .catch(error => {\r\n          setProfile(null);\r\n          setIsValidUser(false);\r\n          updateRateLimits();\r\n          const statusCode = error.response.status;\r\n\r\n          if (statusCode === 403)\r\n            addToast({\r\n              title: 'Warning!',\r\n              description: `You have reached the limit of ${\r\n                rateLimits.limit\r\n              } requests per hour! Try again in ${util.calculateMinutesLeft(\r\n                rateLimits.reset,\r\n              )} minutes.`,\r\n              style: 'text-warning',\r\n            });\r\n\r\n          if (statusCode === 404)\r\n            addToast({\r\n              title: 'User not found!',\r\n              description: `User \"${username}\" not found on GitHub!`,\r\n              style: 'text-warning',\r\n            });\r\n        });\r\n\r\n      githubRepository\r\n        .getContacts(username, 'following', 1)\r\n        .then(response => setFollowing(response))\r\n        .catch(error => setFollowing([]));\r\n\r\n      githubRepository\r\n        .getContacts(username, 'followers', 1)\r\n        .then(response => setFollowers(response))\r\n        .catch(error => setFollowers([]));\r\n    },\r\n    [githubRepository, updateRateLimits, username],\r\n  );\r\n\r\n  useEffect(() => {\r\n    updateRateLimits();\r\n  }, [profile]);\r\n\r\n  useEffect(() => {\r\n    const response = githubRepository.getNotFollowers(following, followers);\r\n    setNotFollowers(response);\r\n  }, [following, followers]);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Navbar\r\n        collapseOnSelect\r\n        className=\"navbar-virtual-width\"\r\n        expand=\"xl\"\r\n        fixed=\"top\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n      >\r\n        <Navbar.Brand className=\"nav-brand\" href=\"#profile\">\r\n          GitHub - Follow Me (or Not)\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          {profile && (\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#following\">Following</Nav.Link>\r\n              <Nav.Link href=\"#followers\">Followers</Nav.Link>\r\n              <Nav.Link href=\"#not-following-back\">Not following back</Nav.Link>\r\n            </Nav>\r\n          )}\r\n          <Navbar.Text className=\"ml-auto text-muted\">\r\n            <small>{`Remaining ${rateLimits.remaining} of ${rateLimits.limit}`}</small>\r\n          </Navbar.Text>\r\n          <Form\r\n            className=\"ml-auto\"\r\n            onSubmit={handleIndexUser}\r\n            validated={isValidUser}\r\n            noValidate\r\n            inline\r\n          >\r\n            <FormControl\r\n              type=\"text\"\r\n              className=\"mr-sm-2 user-form-input\"\r\n              onChange={e => {\r\n                setUsername(e.target.value);\r\n              }}\r\n              onSubmit={handleIndexUser}\r\n              placeholder=\"Enter a GitHub username.\"\r\n              autoFocus\r\n              required\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"user-form-button\"\r\n              variant=\"outline-info\"\r\n              disabled={!username}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Row className=\"content-wrapper\" md={2} lg={3} xl={4}>\r\n        {profile && (\r\n          <>\r\n            <GitHubUser anchorId=\"profile\" profile={profile} />\r\n            <GitHubContacts\r\n              title=\"Following\"\r\n              anchorId=\"following\"\r\n              contacts={following}\r\n            />\r\n            <GitHubContacts\r\n              title=\"Followers\"\r\n              anchorId=\"followers\"\r\n              contacts={followers}\r\n            />\r\n            <GitHubContacts\r\n              title=\"Not following back\"\r\n              anchorId=\"not-following-back\"\r\n              contacts={notFollowers}\r\n            />\r\n          </>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\n\r\nimport AppProvider from './hooks';\r\nimport Landing from './pages/Landing';\r\n\r\nimport './assets/styles/global.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App: React.FC = () => (\r\n  <AppProvider>\r\n    <Landing />\r\n  </AppProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}