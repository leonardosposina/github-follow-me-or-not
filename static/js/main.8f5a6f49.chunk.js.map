{"version":3,"sources":["assets/images/github-logo.svg","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/index.tsx","components/GitHubUser/index.tsx","components/GitHubContacts/GitHubContactItem/index.tsx","components/GitHubContacts/index.tsx","services/api.ts","repositories/GitHubRepository.ts","utils/Utils.ts","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["module","exports","ToastContainer","messages","removeToast","useToast","className","map","item","Toast","key","id","onClose","animation","autohide","delay","Header","src","logoImg","alt","style","title","Body","description","ToastContext","createContext","context","useContext","Error","ToastProvider","children","useState","setMessages","addToast","useCallback","toast","uuid","state","filter","message","Provider","value","AppProvider","GitHubUser","anchorId","profile","Col","Card","Image","avatar_url","name","roundedCircle","Title","Subtitle","login","Text","followers","following","public_repos","GitHubContactItem","contact","Media","as","width","height","href","html_url","target","rel","type","GitHubContacts","contacts","Badge","pill","variant","length","Spinner","api","axios","create","baseURL","GitHubRepository","getRateLimits","a","get","then","response","data","resources","core","getProfile","username","catch","error","getContacts","resource","page","getNotFollowers","comparer","otherArray","current","other","Utils","calculateMinutesLeft","epoch","convertedDate","Date","now","Math","ceil","getTime","Landing","githubRepository","limit","remaining","reset","rateLimits","setRateLimits","setUsername","isValidUser","setIsValidUser","setProfile","setFollowing","setFollowers","notFollowers","setNotFollowers","util","Util","updateRateLimits","limits","handleSearch","e","preventDefault","statusCode","status","useEffect","Container","fluid","Navbar","collapseOnSelect","expand","fixed","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","Form","onSubmit","validated","noValidate","inline","FormControl","onChange","placeholder","autoFocus","required","Button","disabled","Row","md","lg","xl","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,yC,gSCuC5BC,G,MA3BwC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChDC,EAAgBC,IAAhBD,YAER,OACE,yBAAKE,UAAU,aACZH,EAASI,KAAI,SAAAC,GAAI,OAChB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAKG,GACVC,QAAS,kBAAMR,EAAYI,EAAKG,KAChCE,WAAS,EACTC,UAAQ,EACRC,MAAO,KAEP,kBAACN,EAAA,EAAMO,OAAP,KACE,yBAAKC,IAAKC,IAASZ,UAAU,eAAea,IAAI,gBAChD,4BAAQb,UAAU,WAAlB,UACA,2BAAOA,UAAWE,EAAKY,OACrB,gCAASZ,EAAKa,SAGlB,kBAACZ,EAAA,EAAMa,KAAP,KAAad,EAAKe,oBCftBC,EAAeC,wBAAiC,IAEtD,SAASpB,IACP,IAAMqB,EAAUC,qBAAWH,GAE3B,IAAKE,EAAS,MAAM,IAAIE,MAAM,gDAE9B,OAAOF,EAGT,IAAMG,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChBC,mBAA0B,IADV,mBACzC5B,EADyC,KAC/B6B,EAD+B,KAG1CC,EAAWC,uBACf,YAA+D,IAA5Db,EAA2D,EAA3DA,MAAOE,EAAoD,EAApDA,YAAaH,EAAuC,EAAvCA,MAEfe,EAAQ,CACZxB,GAFSyB,iBAGTf,QACAE,cACAH,SAGFY,EAAY,GAAD,mBAAK7B,GAAL,CAAegC,OAE5B,CAAChC,IAGGC,EAAc8B,uBAAY,SAACvB,GAC/BqB,GAAY,SAAAK,GAAK,OAAIA,EAAMC,QAAO,SAAAC,GAAO,OAAIA,EAAQ5B,KAAOA,UAC3D,IAEH,OACE,kBAACa,EAAagB,SAAd,CAAuBC,MAAO,CAAER,WAAU7B,gBACvC0B,EACD,kBAAC,EAAD,CAAgB3B,SAAUA,MC5CjBuC,EAJe,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SAAH,OAC5B,kBAAC,EAAD,KAAgBA,I,6GC+CHa,G,MAvCgC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1D,OACE,kBAACC,EAAA,EAAD,CAAKnC,GAAIiC,GACP,kBAACG,EAAA,EAAD,KACE,0BAAMzC,UAAU,eACd,kBAAC0C,EAAA,EAAD,CACE1C,UAAU,qBACVW,IAAK4B,EAAQI,WACb9B,IAAK0B,EAAQK,KACbC,eAAa,KAGjB,kBAACJ,EAAA,EAAKzB,KAAN,KACE,yBAAKhB,UAAU,eACb,kBAACyC,EAAA,EAAKK,MAAN,KAAaP,EAAQK,MACrB,kBAACH,EAAA,EAAKM,SAAN,CAAe/C,UAAU,mBACtBuC,EAAQS,QAGb,kBAACP,EAAA,EAAKQ,KAAN,CAAWjD,UAAU,wBACnB,+CAEE,gCAASuC,EAAQW,YAEnB,+CAEE,gCAASX,EAAQY,YAEnB,kDAEE,gCAASZ,EAAQa,qB,wBCDhBC,G,MA/B6D,SAAC,GAEtE,IADLC,EACI,EADJA,QAEA,OACE,kBAACC,EAAA,EAAD,CAAOC,GAAG,KAAKxD,UAAU,sBACvB,kBAAC0C,EAAA,EAAD,CACEe,MAAO,GACPC,OAAQ,GACR1D,UAAU,OACVW,IAAK2C,EAAQX,WACb9B,IAAKyC,EAAQN,MACbH,eAAa,IAEf,kBAACU,EAAA,EAAMvC,KAAP,KACE,uBACE2C,KAAML,EAAQM,SACd5D,UAAU,qBACV6D,OAAO,SACPC,IAAI,uBAEJ,4BAAKR,EAAQN,OACb,uBAAGhD,UAAU,cAAb,SAEGsD,EAAQS,WCYNC,G,MA/BwC,SAAC,GAIjD,IAHLjD,EAGI,EAHJA,MACAuB,EAEI,EAFJA,SACA2B,EACI,EADJA,SAEA,OACE,kBAACzB,EAAA,EAAD,CAAKnC,GAAIiC,GACP,kBAACG,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKzB,KAAN,KACE,uBAAGhB,UAAU,SAAb,UACMe,EADN,MAEE,kBAACmD,EAAA,EAAD,CAAOC,MAAI,EAACC,QAAQ,aACjBH,EAASI,UAGZJ,GACA,uBAAGjE,UAAU,eACX,kBAACsE,EAAA,EAAD,CAAS/D,UAAU,YAGvB,wBAAIP,UAAU,6BACXiE,EAAShE,KAAI,SAAAC,GAAI,OAChB,kBAAC,EAAD,CAAmBE,IAAKF,EAAKG,GAAIiD,QAASpD,a,gBC/BzCqE,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,4BC2CIC,E,iDApCNC,c,sBAAgB,sBAAAC,EAAA,+EACrBN,EAAIO,IAAI,cAAcC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,UAAUC,SAD1C,2C,KAGhBC,W,uCAAa,WAAOC,GAAP,SAAAR,EAAA,+EAClBN,EACGO,IADH,gBACgBO,IACbN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BK,OAAM,SAAAC,GACL,MAAMA,MALQ,2C,2DAQbC,Y,uCAAc,iCAAAX,EAAA,6DACnBQ,EADmB,EACnBA,SACAI,EAFmB,EAEnBA,SACAC,EAHmB,EAGnBA,KAHmB,kBAKnBnB,EACGO,IADH,gBACgBO,EADhB,YAC4BI,EAD5B,8BAC0DC,IACvDX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BK,OAAM,SAAAC,GACL,MAAMA,MATS,2C,2DAYdI,gBAAkB,SACvBxC,EACAD,GAFuB,OAGCC,EAAUnB,OAAO,EAAK4D,SAAS1C,K,KAGjD0C,SAAW,SAACC,GAClB,OAAO,SAACC,GACN,OAAsE,IAA/DD,EAAW7D,QAAO,SAAA+D,GAAK,OAAIA,EAAM1F,KAAOyF,EAAQzF,MAAIgE,UCjClD2B,E,sCAPNC,qBAAuB,SAACC,GAC7B,IAAMC,EAAgB,IAAIC,KAAa,IAARF,GACzBG,EAAM,IAAID,KAChB,OAAOE,KAAKC,MAAMJ,EAAcK,UAAYH,EAAIG,WAAa,OCoMlDC,G,MA/KW,WACxB,IAAMC,EAAmB,IAAI/B,EADC,EAGMlD,mBAA+B,CACjEkF,MAAO,EACPC,UAAW,EACXC,MAAO,IANqB,mBAGvBC,EAHuB,KAGXC,EAHW,OASEtF,mBAAS,IATX,mBASvB4D,EATuB,KASb2B,EATa,OAUQvF,qBAVR,mBAUvBwF,EAVuB,KAUVC,EAVU,OAWAzF,qBAXA,mBAWvBc,EAXuB,KAWd4E,EAXc,OAYI1F,mBAA8B,IAZlC,mBAYvB0B,EAZuB,KAYZiE,EAZY,OAaI3F,mBAA8B,IAblC,mBAavByB,EAbuB,KAaZmE,EAbY,OAcU5F,mBAA8B,IAdxC,mBAcvB6F,EAduB,KAcTC,EAdS,KAgBtB5F,EAAa5B,IAAb4B,SACF6F,EAAO,IAAIC,EAEXC,EAAmB9F,sBAAW,sBAAC,4BAAAiD,EAAA,sEACd6B,EAAiB9B,gBADH,OAC7B+C,EAD6B,OAEnCZ,EAAcY,GAFqB,2CAGlC,CAACjB,IAEEkB,EAAehG,sBAAW,uCAC9B,WAAOiG,GAAP,eAAAhD,EAAA,6DACEgD,EAAEC,iBADJ,kBAIUpB,EAAiBtB,WAAWC,GAAUN,MAAK,SAAAC,GAC/CmC,EAAWnC,GACXoC,EAAa,IACbC,EAAa,IACbH,GAAe,MARrB,uBAWUR,EACHlB,YAAY,CAAEH,WAAUI,SAAU,YAAaC,KAAM,IACrDX,MAAK,SAAAC,GAAQ,OAAIoC,EAAapC,MAbrC,uBAeU0B,EACHlB,YAAY,CAAEH,WAAUI,SAAU,YAAaC,KAAM,IACrDX,MAAK,SAAAC,GAAQ,OAAIqC,EAAarC,MAjBrC,yDAmBImC,EAAW,MACXC,EAAa,IACbC,EAAa,IACbH,GAAe,GAII,OAFba,EAAa,KAAM/C,SAASgD,SAGhCrG,EAAS,CACPZ,MAAO,2BACPE,YAAY,iCAAD,OACT6F,EAAWH,MADF,4CAEyBa,EAAKvB,qBACvCa,EAAWD,OAHF,aAKX/F,MAAO,iBAGQ,MAAfiH,GACFpG,EAAS,CACPZ,MAAO,kBACPE,YAAY,SAAD,OAAWoE,EAAX,0BACXvE,MAAO,iBAzCf,0DAD8B,sDA8C9B,CACEa,EACA+E,EACAI,EAAWH,MACXG,EAAWD,MACXxB,EACAmC,IAaJ,OATAS,qBAAU,WACRP,MACC,CAACnF,EAASY,EAAWD,IAExB+E,qBAAU,WACR,IAAMjD,EAAW0B,EAAiBf,gBAAgBxC,EAAWD,GAC7DqE,EAAgBvC,KACf,CAAC7B,EAAWD,IAGb,kBAACgF,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CACEC,kBAAgB,EAChBrI,UAAU,uBACVsI,OAAO,KACPC,MAAM,MACNC,GAAG,OACHpE,QAAQ,QAER,kBAACgE,EAAA,EAAOK,MAAR,CAAczI,UAAU,YAAY2D,KAAK,YAAzC,+BAGA,kBAACyE,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBvI,GAAG,yBACjBkC,GACC,kBAACsG,EAAA,EAAD,CAAK7I,UAAU,WACb,kBAAC6I,EAAA,EAAIC,KAAL,CAAUnF,KAAK,cAAf,aACA,kBAACkF,EAAA,EAAIC,KAAL,CAAUnF,KAAK,cAAf,aACA,kBAACkF,EAAA,EAAIC,KAAL,CAAUnF,KAAK,uBAAf,uBAGJ,kBAACyE,EAAA,EAAOnF,KAAR,CAAajD,UAAU,sBACrB,mDAAqB8G,EAAWF,UAAhC,eAAgDE,EAAWH,SAE7D,kBAACoC,EAAA,EAAD,CACE/I,UAAU,UACVgJ,SAAUpB,EACVqB,UAAWhC,EACXiC,YAAU,EACVC,QAAM,GAEN,kBAACC,EAAA,EAAD,CACErF,KAAK,OACL/D,UAAU,0BACVqJ,SAAU,SAAAxB,GACRb,EAAYa,EAAEhE,OAAO1B,QAEvB6G,SAAUpB,EACV0B,YAAY,2BACZC,WAAS,EACTC,UAAQ,IAEV,kBAACC,EAAA,EAAD,CACE1F,KAAK,SACL/D,UAAU,mBACVoE,QAAQ,eACRsF,UAAWrE,GAJb,aAWN,kBAACsE,EAAA,EAAD,CAAK3J,UAAU,kBAAkB4J,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAChDvH,GACC,oCACE,kBAAC,EAAD,CAAYD,SAAS,UAAUC,QAASA,IAClB,IAArBW,EAAUmB,QACT,kBAAC,EAAD,CACEtD,MAAM,YACNuB,SAAS,YACT2B,SAAUf,IAGQ,IAArBC,EAAUkB,QACT,oCACE,kBAAC,EAAD,CACEtD,MAAM,YACNuB,SAAS,YACT2B,SAAUd,IAEZ,kBAAC,EAAD,CACEpC,MAAM,qBACNuB,SAAS,qBACT2B,SAAUqD,UC/KbyC,G,YANO,kBACpB,kBAAC,EAAD,KACE,kBAAC,EAAD,SCNJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8f5a6f49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import React from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nimport logoImg from '../../assets/images/github-logo.svg';\r\nimport { IToastMessage, useToast } from '../../hooks/toast';\r\n\r\nimport './styles.css';\r\n\r\ninterface IToastContainerProps {\r\n  messages: IToastMessage[];\r\n}\r\n\r\nconst ToastContainer: React.FC<IToastContainerProps> = ({ messages }) => {\r\n  const { removeToast } = useToast();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {messages.map(item => (\r\n        <Toast\r\n          key={item.id}\r\n          onClose={() => removeToast(item.id)}\r\n          animation\r\n          autohide\r\n          delay={3000}\r\n        >\r\n          <Toast.Header>\r\n            <img src={logoImg} className=\"rounded mr-2\" alt=\"GitHub Logo\" />\r\n            <strong className=\"mr-auto\">GitHub</strong>\r\n            <small className={item.style}>\r\n              <strong>{item.title}</strong>\r\n            </small>\r\n          </Toast.Header>\r\n          <Toast.Body>{item.description}</Toast.Body>\r\n        </Toast>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastContainer;\r\n","import React, { createContext, useContext, useCallback, useState } from 'react';\r\nimport { uuid } from 'uuidv4';\r\n\r\nimport ToastContainer from '../components/ToastContainer';\r\n\r\nexport interface IToastMessage {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  style: 'text-info' | 'text-success' | 'text-warning' | 'text-danger';\r\n}\r\n\r\ninterface IToastContextData {\r\n  addToast(message: Omit<IToastMessage, 'id'>): void;\r\n  removeToast(id: string): void;\r\n}\r\n\r\nconst ToastContext = createContext<IToastContextData>({} as IToastContextData);\r\n\r\nfunction useToast(): IToastContextData {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (!context) throw new Error('useToast must be used within a ToastProvider');\r\n\r\n  return context;\r\n}\r\n\r\nconst ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<IToastMessage[]>([]);\r\n\r\n  const addToast = useCallback(\r\n    ({ title, description, style }: Omit<IToastMessage, 'id'>) => {\r\n      const id = uuid();\r\n      const toast = {\r\n        id,\r\n        title,\r\n        description,\r\n        style,\r\n      };\r\n\r\n      setMessages([...messages, toast]);\r\n    },\r\n    [messages],\r\n  );\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setMessages(state => state.filter(message => message.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport { useToast, ToastProvider };\r\n","import React from 'react';\r\n\r\nimport { ToastProvider } from './toast';\r\n\r\nconst AppProvider: React.FC = ({ children }) => (\r\n  <ToastProvider>{children}</ToastProvider>\r\n);\r\n\r\nexport default AppProvider;\r\n","/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport { Card, Col, Image } from 'react-bootstrap';\r\n\r\nimport IGitHubProfileDTO from '../../dtos/IGitHubProfileDTO';\r\n\r\nimport './styles.css';\r\n\r\ninterface IGitHubUserProps {\r\n  anchorId: string;\r\n  profile: IGitHubProfileDTO;\r\n}\r\n\r\nconst GitHubUser: React.FC<IGitHubUserProps> = ({ anchorId, profile }) => {\r\n  return (\r\n    <Col id={anchorId}>\r\n      <Card>\r\n        <span className=\"text-center\">\r\n          <Image\r\n            className=\"user-profile-image\"\r\n            src={profile.avatar_url}\r\n            alt={profile.name}\r\n            roundedCircle\r\n          />\r\n        </span>\r\n        <Card.Body>\r\n          <div className=\"text-center\">\r\n            <Card.Title>{profile.name}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {profile.login}\r\n            </Card.Subtitle>\r\n          </div>\r\n          <Card.Text className=\"user-profile-details\">\r\n            <span>\r\n              Followers:&nbsp;\r\n              <strong>{profile.followers}</strong>\r\n            </span>\r\n            <span>\r\n              Following:&nbsp;\r\n              <strong>{profile.following}</strong>\r\n            </span>\r\n            <span>\r\n              Public repos:&nbsp;\r\n              <strong>{profile.public_repos}</strong>\r\n            </span>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GitHubUser;\r\n","import React from 'react';\r\nimport { Media, Image } from 'react-bootstrap';\r\n\r\nimport IGitHubContactDTO from '../../../dtos/IGitHubContactDTO';\r\n\r\nimport './styles.css';\r\n\r\ninterface IGitHubProfileItemProps {\r\n  contact: IGitHubContactDTO;\r\n}\r\n\r\nconst GitHubContactItem: React.FunctionComponent<IGitHubProfileItemProps> = ({\r\n  contact,\r\n}) => {\r\n  return (\r\n    <Media as=\"li\" className=\"media-profile-item\">\r\n      <Image\r\n        width={64}\r\n        height={64}\r\n        className=\"mr-3\"\r\n        src={contact.avatar_url}\r\n        alt={contact.login}\r\n        roundedCircle\r\n      />\r\n      <Media.Body>\r\n        <a\r\n          href={contact.html_url}\r\n          className=\"media-profile-link\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <h5>{contact.login}</h5>\r\n          <p className=\"text-muted\">\r\n            GitHub\r\n            {contact.type}\r\n          </p>\r\n        </a>\r\n      </Media.Body>\r\n    </Media>\r\n  );\r\n};\r\n\r\nexport default GitHubContactItem;\r\n","import React from 'react';\r\nimport { Col, Card, Badge, Spinner } from 'react-bootstrap';\r\n\r\nimport IGitHubContactDTO from '../../dtos/IGitHubContactDTO';\r\n\r\nimport GitHubContactItem from './GitHubContactItem';\r\n\r\nimport './styles.css';\r\n\r\ninterface IGitHubContactsProps {\r\n  title: string;\r\n  anchorId: string;\r\n  contacts: IGitHubContactDTO[];\r\n}\r\n\r\nconst GitHubContacts: React.FC<IGitHubContactsProps> = ({\r\n  title,\r\n  anchorId,\r\n  contacts,\r\n}) => {\r\n  return (\r\n    <Col id={anchorId}>\r\n      <Card>\r\n        <Card.Body>\r\n          <p className=\"title\">\r\n            {`${title}: `}\r\n            <Badge pill variant=\"secondary\">\r\n              {contacts.length}\r\n            </Badge>\r\n          </p>\r\n          {!contacts && (\r\n            <p className=\"text-center\">\r\n              <Spinner animation=\"border\" />\r\n            </p>\r\n          )}\r\n          <ul className=\"list-unstyled list-scroll\">\r\n            {contacts.map(item => (\r\n              <GitHubContactItem key={item.id} contact={item} />\r\n            ))}\r\n          </ul>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GitHubContacts;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/',\r\n});\r\n\r\nexport default api;\r\n","/* eslint-disable camelcase */\r\nimport IGithubRepository from '../interfaces/IGitHubRepository';\r\nimport api from '../services/api';\r\n\r\nimport IGitHubProfileDTO from '../dtos/IGitHubProfileDTO';\r\nimport IGitHubContactDTO from '../dtos/IGitHubContactDTO';\r\nimport IGitHubRateLimitsDTO from '../dtos/IGitHubRateLimitsDTO';\r\nimport ISearchContactDTO from '../dtos/ISearchContactDTO';\r\n\r\nclass GitHubRepository implements IGithubRepository {\r\n  public getRateLimits = async (): Promise<IGitHubRateLimitsDTO> =>\r\n    api.get('rate_limit').then(response => response.data.resources.core);\r\n\r\n  public getProfile = async (username: string): Promise<IGitHubProfileDTO> =>\r\n    api\r\n      .get(`users/${username}`)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n\r\n  public getContacts = async ({\r\n    username,\r\n    resource,\r\n    page,\r\n  }: ISearchContactDTO): Promise<IGitHubContactDTO[]> =>\r\n    api\r\n      .get(`users/${username}/${resource}?per_page=100&page=${page}`)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n\r\n  public getNotFollowers = (\r\n    following: IGitHubContactDTO[],\r\n    followers: IGitHubContactDTO[],\r\n  ): IGitHubContactDTO[] => following.filter(this.comparer(followers));\r\n\r\n  // Helper function to find who is not following back.\r\n  private comparer = (otherArray: IGitHubContactDTO[]) => {\r\n    return (current: IGitHubContactDTO) => {\r\n      return otherArray.filter(other => other.id === current.id).length === 0;\r\n    };\r\n  };\r\n}\r\n\r\nexport default GitHubRepository;\r\n","class Utils {\r\n  public calculateMinutesLeft = (epoch: number): number => {\r\n    const convertedDate = new Date(epoch * 1000);\r\n    const now = new Date();\r\n    return Math.ceil((convertedDate.getTime() - now.getTime()) / 60000);\r\n  };\r\n}\r\n\r\nexport default Utils;\r\n","import React, { useState, FormEvent, useEffect, useCallback } from 'react';\nimport {\n  Container,\n  Navbar,\n  Nav,\n  Row,\n  Form,\n  FormControl,\n  Button,\n} from 'react-bootstrap';\n\nimport GitHubUser from '../../components/GitHubUser';\nimport GitHubContacts from '../../components/GitHubContacts';\n\nimport IGitHubProfileDTO from '../../dtos/IGitHubProfileDTO';\nimport IGitHubContactDTO from '../../dtos/IGitHubContactDTO';\nimport IGitHubRateLimitsDTO from '../../dtos/IGitHubRateLimitsDTO';\n\nimport GitHubRepository from '../../repositories/GitHubRepository';\n\nimport { useToast } from '../../hooks/toast';\nimport Util from '../../utils/Utils';\n\nimport './styles.css';\n\nconst Landing: React.FC = () => {\n  const githubRepository = new GitHubRepository();\n\n  const [rateLimits, setRateLimits] = useState<IGitHubRateLimitsDTO>({\n    limit: 0,\n    remaining: 0,\n    reset: 0,\n  });\n\n  const [username, setUsername] = useState('');\n  const [isValidUser, setIsValidUser] = useState<boolean>();\n  const [profile, setProfile] = useState<IGitHubProfileDTO | null>();\n  const [following, setFollowing] = useState<IGitHubContactDTO[]>([]);\n  const [followers, setFollowers] = useState<IGitHubContactDTO[]>([]);\n  const [notFollowers, setNotFollowers] = useState<IGitHubContactDTO[]>([]);\n\n  const { addToast } = useToast();\n  const util = new Util();\n\n  const updateRateLimits = useCallback(async () => {\n    const limits = await githubRepository.getRateLimits();\n    setRateLimits(limits);\n  }, [githubRepository]);\n\n  const handleSearch = useCallback(\n    async (e: FormEvent) => {\n      e.preventDefault();\n\n      try {\n        await githubRepository.getProfile(username).then(response => {\n          setProfile(response);\n          setFollowing([]);\n          setFollowers([]);\n          setIsValidUser(true);\n        });\n\n        await githubRepository\n          .getContacts({ username, resource: 'following', page: 1 })\n          .then(response => setFollowing(response));\n\n        await githubRepository\n          .getContacts({ username, resource: 'followers', page: 1 })\n          .then(response => setFollowers(response));\n      } catch (error) {\n        setProfile(null);\n        setFollowing([]);\n        setFollowers([]);\n        setIsValidUser(false);\n\n        const statusCode = error.response.status;\n\n        if (statusCode === 403)\n          addToast({\n            title: 'Requests limit exceeded!',\n            description: `You have reached the limit of ${\n              rateLimits.limit\n            } requests per hour! Try again in ${util.calculateMinutesLeft(\n              rateLimits.reset,\n            )} minutes.`,\n            style: 'text-warning',\n          });\n\n        if (statusCode === 404)\n          addToast({\n            title: 'User not found!',\n            description: `User \"${username}\" not found on GitHub!`,\n            style: 'text-warning',\n          });\n      }\n    },\n    [\n      addToast,\n      githubRepository,\n      rateLimits.limit,\n      rateLimits.reset,\n      username,\n      util,\n    ],\n  );\n\n  useEffect(() => {\n    updateRateLimits();\n  }, [profile, following, followers]);\n\n  useEffect(() => {\n    const response = githubRepository.getNotFollowers(following, followers);\n    setNotFollowers(response);\n  }, [following, followers]);\n\n  return (\n    <Container fluid>\n      <Navbar\n        collapseOnSelect\n        className=\"navbar-virtual-width\"\n        expand=\"xl\"\n        fixed=\"top\"\n        bg=\"dark\"\n        variant=\"dark\"\n      >\n        <Navbar.Brand className=\"nav-brand\" href=\"#profile\">\n          GitHub - Follow Me (or Not)\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          {profile && (\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#followers\">Followers</Nav.Link>\n              <Nav.Link href=\"#following\">Following</Nav.Link>\n              <Nav.Link href=\"#not-following-back\">Not following back</Nav.Link>\n            </Nav>\n          )}\n          <Navbar.Text className=\"ml-auto text-muted\">\n            <small>{`Remaining ${rateLimits.remaining} of ${rateLimits.limit}`}</small>\n          </Navbar.Text>\n          <Form\n            className=\"ml-auto\"\n            onSubmit={handleSearch}\n            validated={isValidUser}\n            noValidate\n            inline\n          >\n            <FormControl\n              type=\"text\"\n              className=\"mr-sm-2 user-form-input\"\n              onChange={e => {\n                setUsername(e.target.value);\n              }}\n              onSubmit={handleSearch}\n              placeholder=\"Enter a GitHub username.\"\n              autoFocus\n              required\n            />\n            <Button\n              type=\"submit\"\n              className=\"user-form-button\"\n              variant=\"outline-info\"\n              disabled={!username}\n            >\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <Row className=\"content-wrapper\" md={2} lg={3} xl={4}>\n        {profile && (\n          <>\n            <GitHubUser anchorId=\"profile\" profile={profile} />\n            {followers.length !== 0 && (\n              <GitHubContacts\n                title=\"Followers\"\n                anchorId=\"followers\"\n                contacts={followers}\n              />\n            )}\n            {following.length !== 0 && (\n              <>\n                <GitHubContacts\n                  title=\"Following\"\n                  anchorId=\"following\"\n                  contacts={following}\n                />\n                <GitHubContacts\n                  title=\"Not following back\"\n                  anchorId=\"not-following-back\"\n                  contacts={notFollowers}\n                />\n              </>\n            )}\n          </>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\r\n\r\nimport AppProvider from './hooks';\r\nimport Landing from './pages/Landing';\r\n\r\nimport './assets/styles/global.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App: React.FC = () => (\r\n  <AppProvider>\r\n    <Landing />\r\n  </AppProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}