{"version":3,"sources":["components/GitHubContacts/GitHubContactItem/index.tsx","components/GitHubContacts/index.tsx","components/GitHubUser/index.tsx","services/api.ts","repositories/GitHubRepository.ts","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["GitHubContactItem","contact","Media","as","className","Image","width","height","src","avatar_url","alt","login","roundedCircle","Body","href","html_url","target","rel","type","GitHubContacts","title","anchorId","contacts","Col","id","Card","Badge","pill","variant","length","Spinner","animation","map","item","key","GitHubUser","profile","name","Title","Subtitle","Text","following","followers","public_repos","api","axios","create","baseURL","GitHubRepository","getProfile","username","a","get","then","response","data","catch","error","getContacts","resource","page","getNotFollowers","filter","otherArray","current","other","getRateLimits","resources","core","Landing","githubRepository","useState","limit","remaining","reset","rateLimits","setRateLimits","setUsername","isValidUser","setIsValidUser","setProfile","setFollowing","setFollowers","notFollowers","setNotFollowers","updateRateLimits","useCallback","limits","handleIndexUser","e","preventDefault","status","console","log","useEffect","Container","fluid","Navbar","collapseOnSelect","expand","fixed","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","Form","onSubmit","validated","noValidate","inline","FormControl","onChange","value","placeholder","autoFocus","required","Button","disabled","Row","md","lg","xl","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d52b85.chunk.js","sourcesContent":["import React from 'react';\nimport { Media, Image } from 'react-bootstrap';\nimport { GitHubContactDTO } from '../../../repositories/GitHubRepository';\n\nimport './styles.css';\n\ninterface GitHubProfileItemProps {\n  contact: GitHubContactDTO;\n}\n\nconst GitHubContactItem: React.FunctionComponent<GitHubProfileItemProps> = ({\n  contact,\n}) => {\n  return (\n    <Media as=\"li\" className=\"media-profile-item\">\n      <Image\n        width={64}\n        height={64}\n        className=\"mr-3\"\n        src={contact.avatar_url}\n        alt={contact.login}\n        roundedCircle\n      />\n      <Media.Body>\n        <a\n          href={contact.html_url}\n          className=\"media-profile-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <h5>{contact.login}</h5>\n          <p className=\"text-muted\">\n            GitHub\n            {contact.type}\n          </p>\n        </a>\n      </Media.Body>\n    </Media>\n  );\n};\n\nexport default GitHubContactItem;\n","import React from 'react';\nimport { Col, Card, Badge, Spinner } from 'react-bootstrap';\n\nimport GitHubContactItem from './GitHubContactItem';\n\nimport { GitHubContactDTO } from '../../repositories/GitHubRepository';\n\nimport './styles.css';\n\ninterface GitHubContactsProps {\n  title: string;\n  anchorId: string;\n  contacts: GitHubContactDTO[];\n}\n\nconst GitHubContacts: React.FC<GitHubContactsProps> = ({\n  title,\n  anchorId,\n  contacts,\n}) => {\n  return (\n    <Col id={anchorId}>\n      <Card>\n        <Card.Body>\n          <p className=\"title\">\n            {`${title}: `}\n            <Badge pill variant=\"secondary\">\n              {contacts.length}\n            </Badge>\n          </p>\n          {!contacts && (\n            <p className=\"text-center\">\n              <Spinner animation=\"border\" />\n            </p>\n          )}\n          <ul className=\"list-unstyled list-scroll\">\n            {contacts.map(item => (\n              <GitHubContactItem key={item.id} contact={item} />\n            ))}\n          </ul>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nexport default GitHubContacts;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { Card, Col, Image } from 'react-bootstrap';\n\nimport { GitHubUserDTO } from '../../repositories/GitHubRepository';\n\nimport './styles.css';\n\ninterface GitHubUserProps {\n  anchorId: string;\n  profile: GitHubUserDTO;\n}\n\nconst GitHubUser: React.FC<GitHubUserProps> = ({ anchorId, profile }) => {\n  return (\n    <Col id={anchorId}>\n      <Card>\n        <span className=\"text-center\">\n          <Image\n            className=\"user-profile-image\"\n            src={profile.avatar_url}\n            alt={profile.name}\n            roundedCircle\n          />\n        </span>\n        <Card.Body>\n          <div className=\"text-center\">\n            <Card.Title>{profile.name}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {profile.login}\n            </Card.Subtitle>\n          </div>\n          <Card.Text className=\"user-profile-details\">\n            <span>\n              Following:&nbsp;\n              <strong>{profile.following}</strong>\n            </span>\n            <span>\n              Followers:&nbsp;\n              <strong>{profile.followers}</strong>\n            </span>\n            <span>\n              Public repos:&nbsp;\n              <strong>{profile.public_repos}</strong>\n            </span>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nexport default GitHubUser;\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/'\r\n});\r\n\r\nexport default api;","/* eslint-disable camelcase */\nimport api from '../services/api';\n\nexport interface GitHubRateLimitsDTO {\n  limit: number;\n  remaining: number;\n  reset: number;\n}\n\nexport interface GitHubUserDTO {\n  id: number;\n  login: string;\n  name: string;\n  type: string;\n  avatar_url: string;\n  html_url: string;\n  following: number;\n  followers: number;\n  public_repos: number;\n}\n\nexport interface GitHubContactDTO {\n  id: number;\n  login: string;\n  type: string;\n  avatar_url: string;\n  html_url: string;\n}\n\nclass GitHubRepository {\n  public getProfile = async (username: string): Promise<GitHubUserDTO> => {\n    return api\n      .get(`users/${username}`)\n      .then(response => response.data)\n      .catch(error => {\n        throw error;\n      });\n  };\n\n  public getContacts = async (\n    username: string,\n    resource: 'following' | 'followers',\n    page: number,\n  ): Promise<GitHubContactDTO[]> =>\n    api\n      .get(`users/${username}/${resource}?per_page=100&page=${page}`)\n      .then(response => response.data);\n\n  public getNotFollowers = (\n    following: GitHubContactDTO[],\n    followers: GitHubContactDTO[],\n  ): GitHubContactDTO[] => {\n    function comparer(otherArray: GitHubContactDTO[]) {\n      return (current: GitHubContactDTO) => {\n        return otherArray.filter(other => other.id === current.id).length === 0;\n      };\n    }\n    return following.filter(comparer(followers));\n  };\n\n  public getRateLimits = async (): Promise<GitHubRateLimitsDTO> =>\n    api.get('rate_limit').then(response => response.data.resources.core);\n}\n\nexport default GitHubRepository;\n","import React, { useState, FormEvent, useEffect, useCallback } from 'react';\nimport {\n  Container,\n  Navbar,\n  Nav,\n  Row,\n  Form,\n  FormControl,\n  Button,\n} from 'react-bootstrap';\nimport GitHubContacts from '../../components/GitHubContacts';\n\nimport GitHubUser from '../../components/GitHubUser';\n\nimport GitHubRepository, {\n  GitHubUserDTO,\n  GitHubContactDTO,\n  GitHubRateLimitsDTO,\n} from '../../repositories/GitHubRepository';\n\n// import GitHubToast from '../../components/GitHubToast';\n\nimport './styles.css';\n\nconst Landing: React.FC = () => {\n  const githubRepository = new GitHubRepository();\n\n  const [rateLimits, setRateLimits] = useState<GitHubRateLimitsDTO>({\n    limit: 0,\n    remaining: 0,\n    reset: 0,\n  });\n\n  const [username, setUsername] = useState('');\n  const [isValidUser, setIsValidUser] = useState<boolean>();\n  const [profile, setProfile] = useState<GitHubUserDTO | null>();\n  const [following, setFollowing] = useState<GitHubContactDTO[]>([]);\n  const [followers, setFollowers] = useState<GitHubContactDTO[]>([]);\n  const [notFollowers, setNotFollowers] = useState<GitHubContactDTO[]>([]);\n\n  const updateRateLimits = useCallback(async () => {\n    const limits = await githubRepository.getRateLimits();\n    setRateLimits(limits);\n  }, [githubRepository]);\n\n  const handleIndexUser = useCallback(\n    async (e: FormEvent) => {\n      e.preventDefault();\n\n      githubRepository\n        .getProfile(username)\n        .then(response => {\n          setProfile(response);\n          setIsValidUser(true);\n        })\n        .catch(error => {\n          setProfile(null);\n          setIsValidUser(false);\n          updateRateLimits();\n          const statusCode = error.response.status;\n          if (statusCode === 403) console.log('Acabou o limite!');\n        });\n\n      githubRepository\n        .getContacts(username, 'following', 1)\n        .then(response => setFollowing(response))\n        .catch(error => setFollowing([]));\n\n      githubRepository\n        .getContacts(username, 'followers', 1)\n        .then(response => setFollowers(response))\n        .catch(error => setFollowers([]));\n    },\n    [githubRepository, updateRateLimits, username],\n  );\n\n  useEffect(() => {\n    updateRateLimits();\n  }, [profile]);\n\n  useEffect(() => {\n    const response = githubRepository.getNotFollowers(following, followers);\n    setNotFollowers(response);\n  }, [following, followers]);\n\n  return (\n    <Container fluid>\n      <Navbar\n        collapseOnSelect\n        className=\"navbar-virtual-width\"\n        expand=\"xl\"\n        fixed=\"top\"\n        bg=\"dark\"\n        variant=\"dark\"\n      >\n        <Navbar.Brand className=\"nav-brand\" href=\"#profile\">\n          GitHub - Follow Me (or Not)\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          {profile && (\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#following\">Following</Nav.Link>\n              <Nav.Link href=\"#followers\">Followers</Nav.Link>\n              <Nav.Link href=\"#not-following-back\">Not following back</Nav.Link>\n            </Nav>\n          )}\n          <Navbar.Text className=\"ml-auto text-muted\">\n            <small>{`Remaining ${rateLimits.remaining} of ${rateLimits.limit}`}</small>\n          </Navbar.Text>\n          <Form\n            className=\"ml-auto\"\n            onSubmit={handleIndexUser}\n            validated={isValidUser}\n            noValidate\n            inline\n          >\n            <FormControl\n              type=\"text\"\n              className=\"mr-sm-2 user-form-input\"\n              onChange={e => {\n                setUsername(e.target.value);\n              }}\n              onSubmit={handleIndexUser}\n              placeholder=\"Enter a GitHub username.\"\n              autoFocus\n              required\n            />\n            <Button\n              type=\"submit\"\n              className=\"user-form-button\"\n              variant=\"outline-info\"\n              disabled={!username}\n            >\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <Row className=\"content-wrapper\" md={2} lg={3} xl={4}>\n        {profile && (\n          <>\n            <GitHubUser anchorId=\"profile\" profile={profile} />\n            <GitHubContacts\n              title=\"Following\"\n              anchorId=\"following\"\n              contacts={following}\n            />\n            <GitHubContacts\n              title=\"Followers\"\n              anchorId=\"followers\"\n              contacts={followers}\n            />\n            <GitHubContacts\n              title=\"Not following back\"\n              anchorId=\"not-following-back\"\n              contacts={notFollowers}\n            />\n          </>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\n\nimport Landing from './pages/Landing';\n\nimport './assets/styles/global.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App: React.FC = () => <Landing />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}